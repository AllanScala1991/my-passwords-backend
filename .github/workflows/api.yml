name: API Tests

on:
  push:
    branches:
      - master

env:
    DATABASE_URL: postgresql://postgres:root@localhost:5432/mypasswords
    SECRET_KEY: bbd09823c6d48a470098e96df6718cb6

jobs:   
  build:
    runs-on: ubuntu-latest

    services:
        postgres:
          image: postgres:14.5
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: root
          ports:
            - 5432:5432
          options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Build and Run Docker Container
        run: |
          docker build -t node-app .
          docker run -d -p 3000:3000 -e DATABASE_URL=postgresql://postgres:root@localhost:5432/mypasswords -e SECRET_KEY=bbd09823c6d48a470098e96df6718cb6  --name node-container node-app    

      - name: Install Dependencies
        run: docker exec node-container npm install

      - name: Create Prisma Database
        run: docker exec node-container npx prisma migrate dev

      - name: Iniciar servidor Node
        run: docker exec node-container npm run dev &

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 20.0.2

      - name: Clone Tests repository
        run: git clone https://github.com/AllanScala1991/mypasswords-backend-api-tests

      - name: Install Test dependencies
        run: cd mypasswords-backend-api-tests && mvn clean install

      - name: Run API tests
        run: cd mypasswords-backend-api-tests && mvn test -Dtest=Runner